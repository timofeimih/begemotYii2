#http {
	#fastcgi_cache_path /tmp/nginx/ levels=1:2 keys_zone=fastcgi_cache:16m max_size=256m inactive=1d;
#}

## FRONTEND ##
server {
	listen 80;
	
	root /path/to/frontend/web;
	index index.php index.html;

	server_name yii2-starter-kit.example.com;

	charset utf-8;

	location / {
		try_files $uri $uri/ /index.php?$args;
	}

    location ~* ^.+\.(jpg|jpeg|gif|png|ico|css|pdf|ppt|txt|bmp|rtf|js)$ {
        access_log off;
        expires 3d;
    }

    #client_max_body_size 32m;

	location ~ \.php$ {
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		fastcgi_pass unix:/var/run/php5-fpm.sock;
		fastcgi_index index.php;

		# Cache
		# fastcgi_pass_header Cookie; # fill cookie valiables, $cookie_phpsessid for exmaple
		# fastcgi_ignore_headers Cache-Control Expires Set-Cookie; # Use it with caution because it is cause SEO problems
		# fastcgi_cache_key "$request_method|$server_addr:$server_port$request_uri|$cookie_phpsessid"; # generating unique key
        # fastcgi_cache fastcgi_cache; # use fastcgi_cache keys_zone
        # fastcgi_temp_path  /tmp/nginx/temp 1 2; # temp files folder
        # fastcgi_cache_use_stale updating error timeout invalid_header http_500; # show cached page if error (even if it is outdated)
        # fastcgi_cache_valid 200 404 10s; # cache lifetime for 200 404;
        # or fastcgi_cache_valid any 10s; # use it if you want to cache any responses

		include fastcgi_params;
	}

}

## BACKEND ##
server {
	listen 80;

	root /path/to/backend/web;
	index index.php index.html;

	server_name backend.yii2-starter-kit.example.com;

	charset utf-8;

	location / {
		try_files $uri $uri/ /index.php?$args;
	}

    location ~* ^.+\.(jpg|jpeg|gif|png|ico|css|pdf|ppt|txt|bmp|rtf|js)$ {
        access_log off;
        expires 3d;
    }

	location ~ \.php$ {
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		fastcgi_pass unix:/var/run/php5-fpm.sock;
		fastcgi_index index.php;
		include fastcgi_params;
	}

}

## STORAGE ##
server {
	listen 80;
	server_name storage.yii2-starter-kit.example.com;

	root /path/to/storage/web;
	index index.html index.php;
    expires max;

    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/var/run/php5-fpm.sock;
        include fastcgi_params;
    }
}

## MISC ##

### WWW Redirect ###
#server {
#    listen       80;
#    server_name  www.example.com;
#    return       301 http://example.com$request_uri;
#}